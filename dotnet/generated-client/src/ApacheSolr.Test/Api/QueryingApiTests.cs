/*
 * v2 API
 *
 * OpenAPI spec for Solr's v2 API endpoints
 *
 * The version of the OpenAPI document: 9.8.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using ApacheSolr.Client;
using ApacheSolr.Api;
// uncomment below to import models
//using ApacheSolr.Model;

namespace ApacheSolr.Test.Api
{
    /// <summary>
    ///  Class for testing QueryingApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class QueryingApiTests : IDisposable
    {
        private QueryingApi instance;

        public QueryingApiTests()
        {
            instance = new QueryingApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of QueryingApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' QueryingApi
            //Assert.IsType<QueryingApi>(instance);
        }

        /// <summary>
        /// Test JsonQuery
        /// </summary>
        [Fact]
        public void JsonQueryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //IndexTypeModel indexType = null;
            //string indexName = null;
            //Object body = null;
            //var response = instance.JsonQuery(indexType, indexName, body);
            //Assert.IsType<FlexibleSolrJerseyResponseModel>(response);
        }

        /// <summary>
        /// Test Query
        /// </summary>
        [Fact]
        public void QueryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //IndexTypeModel indexType = null;
            //string indexName = null;
            //string? q = null;
            //Collection<string>? fq = null;
            //string? fl = null;
            //int? rows = null;
            //var response = instance.Query(indexType, indexName, q, fq, fl, rows);
            //Assert.IsType<FlexibleSolrJerseyResponseModel>(response);
        }
    }
}
