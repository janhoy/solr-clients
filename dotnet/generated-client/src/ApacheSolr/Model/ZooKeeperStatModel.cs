/*
 * v2 API
 *
 * OpenAPI spec for Solr's v2 API endpoints
 *
 * The version of the OpenAPI document: 9.8.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = ApacheSolr.Client.FileParameter;
using OpenAPIDateConverter = ApacheSolr.Client.OpenAPIDateConverter;

namespace ApacheSolr.Model
{
    /// <summary>
    /// ZooKeeperStatModel
    /// </summary>
    [DataContract(Name = "ZooKeeperStat")]
    public partial class ZooKeeperStatModel : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ZooKeeperStatModel" /> class.
        /// </summary>
        /// <param name="varVersion">varVersion.</param>
        /// <param name="aversion">aversion.</param>
        /// <param name="children">children.</param>
        /// <param name="ctime">ctime.</param>
        /// <param name="cversion">cversion.</param>
        /// <param name="czxid">czxid.</param>
        /// <param name="ephemeralOwner">ephemeralOwner.</param>
        /// <param name="mtime">mtime.</param>
        /// <param name="mzxid">mzxid.</param>
        /// <param name="pzxid">pzxid.</param>
        /// <param name="dataLength">dataLength.</param>
        public ZooKeeperStatModel(int varVersion = default(int), int aversion = default(int), int children = default(int), long ctime = default(long), int cversion = default(int), long czxid = default(long), long ephemeralOwner = default(long), long mtime = default(long), long mzxid = default(long), long pzxid = default(long), int dataLength = default(int))
        {
            this.VarVersion = varVersion;
            this.Aversion = aversion;
            this.Children = children;
            this.Ctime = ctime;
            this.Cversion = cversion;
            this.Czxid = czxid;
            this.EphemeralOwner = ephemeralOwner;
            this.Mtime = mtime;
            this.Mzxid = mzxid;
            this.Pzxid = pzxid;
            this.DataLength = dataLength;
        }

        /// <summary>
        /// Gets or Sets VarVersion
        /// </summary>
        [DataMember(Name = "version", EmitDefaultValue = false)]
        public int VarVersion { get; set; }

        /// <summary>
        /// Gets or Sets Aversion
        /// </summary>
        [DataMember(Name = "aversion", EmitDefaultValue = false)]
        public int Aversion { get; set; }

        /// <summary>
        /// Gets or Sets Children
        /// </summary>
        [DataMember(Name = "children", EmitDefaultValue = false)]
        public int Children { get; set; }

        /// <summary>
        /// Gets or Sets Ctime
        /// </summary>
        [DataMember(Name = "ctime", EmitDefaultValue = false)]
        public long Ctime { get; set; }

        /// <summary>
        /// Gets or Sets Cversion
        /// </summary>
        [DataMember(Name = "cversion", EmitDefaultValue = false)]
        public int Cversion { get; set; }

        /// <summary>
        /// Gets or Sets Czxid
        /// </summary>
        [DataMember(Name = "czxid", EmitDefaultValue = false)]
        public long Czxid { get; set; }

        /// <summary>
        /// Gets or Sets EphemeralOwner
        /// </summary>
        [DataMember(Name = "ephemeralOwner", EmitDefaultValue = false)]
        public long EphemeralOwner { get; set; }

        /// <summary>
        /// Gets or Sets Mtime
        /// </summary>
        [DataMember(Name = "mtime", EmitDefaultValue = false)]
        public long Mtime { get; set; }

        /// <summary>
        /// Gets or Sets Mzxid
        /// </summary>
        [DataMember(Name = "mzxid", EmitDefaultValue = false)]
        public long Mzxid { get; set; }

        /// <summary>
        /// Gets or Sets Pzxid
        /// </summary>
        [DataMember(Name = "pzxid", EmitDefaultValue = false)]
        public long Pzxid { get; set; }

        /// <summary>
        /// Gets or Sets DataLength
        /// </summary>
        [DataMember(Name = "dataLength", EmitDefaultValue = false)]
        public int DataLength { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ZooKeeperStatModel {\n");
            sb.Append("  VarVersion: ").Append(VarVersion).Append("\n");
            sb.Append("  Aversion: ").Append(Aversion).Append("\n");
            sb.Append("  Children: ").Append(Children).Append("\n");
            sb.Append("  Ctime: ").Append(Ctime).Append("\n");
            sb.Append("  Cversion: ").Append(Cversion).Append("\n");
            sb.Append("  Czxid: ").Append(Czxid).Append("\n");
            sb.Append("  EphemeralOwner: ").Append(EphemeralOwner).Append("\n");
            sb.Append("  Mtime: ").Append(Mtime).Append("\n");
            sb.Append("  Mzxid: ").Append(Mzxid).Append("\n");
            sb.Append("  Pzxid: ").Append(Pzxid).Append("\n");
            sb.Append("  DataLength: ").Append(DataLength).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
