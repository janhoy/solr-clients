/*
 * v2 API
 *
 * OpenAPI spec for Solr's v2 API endpoints
 *
 * The version of the OpenAPI document: 9.8.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using ApacheSolr.Client;
using ApacheSolr.Api;
// uncomment below to import models
//using ApacheSolr.Model;

namespace ApacheSolr.Test.Api
{
    /// <summary>
    ///  Class for testing CollectionsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CollectionsApiTests : IDisposable
    {
        private CollectionsApi instance;

        public CollectionsApiTests()
        {
            instance = new CollectionsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CollectionsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CollectionsApi
            //Assert.IsType<CollectionsApi>(instance);
        }

        /// <summary>
        /// Test BalanceShardUnique
        /// </summary>
        [Fact]
        public void BalanceShardUniqueTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string collectionName = null;
            //BalanceShardUniqueRequestBodyModel? balanceShardUniqueRequestBodyModel = null;
            //var response = instance.BalanceShardUnique(collectionName, balanceShardUniqueRequestBodyModel);
            //Assert.IsType<SubResponseAccumulatingJerseyResponseModel>(response);
        }

        /// <summary>
        /// Test CreateCollection
        /// </summary>
        [Fact]
        public void CreateCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateCollectionRequestBodyModel? createCollectionRequestBodyModel = null;
            //var response = instance.CreateCollection(createCollectionRequestBodyModel);
            //Assert.IsType<SubResponseAccumulatingJerseyResponseModel>(response);
        }

        /// <summary>
        /// Test DeleteCollection
        /// </summary>
        [Fact]
        public void DeleteCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string collectionName = null;
            //bool? followAliases = null;
            //string? async = null;
            //var response = instance.DeleteCollection(collectionName, followAliases, async);
            //Assert.IsType<SubResponseAccumulatingJerseyResponseModel>(response);
        }

        /// <summary>
        /// Test ListCollections
        /// </summary>
        [Fact]
        public void ListCollectionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ListCollections();
            //Assert.IsType<ListCollectionsResponseModel>(response);
        }

        /// <summary>
        /// Test ReloadCollection
        /// </summary>
        [Fact]
        public void ReloadCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string collectionName = null;
            //ReloadCollectionRequestBodyModel? reloadCollectionRequestBodyModel = null;
            //var response = instance.ReloadCollection(collectionName, reloadCollectionRequestBodyModel);
            //Assert.IsType<SubResponseAccumulatingJerseyResponseModel>(response);
        }

        /// <summary>
        /// Test RenameCollection
        /// </summary>
        [Fact]
        public void RenameCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string collectionName = null;
            //RenameCollectionRequestBodyModel? renameCollectionRequestBodyModel = null;
            //var response = instance.RenameCollection(collectionName, renameCollectionRequestBodyModel);
            //Assert.IsType<SubResponseAccumulatingJerseyResponseModel>(response);
        }
    }
}
