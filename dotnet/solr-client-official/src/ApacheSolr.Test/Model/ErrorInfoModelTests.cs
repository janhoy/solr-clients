/*
 * v2 API
 *
 * OpenAPI spec for Solr's v2 API endpoints
 *
 * The version of the OpenAPI document: 9.8.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ApacheSolr.Model;
using ApacheSolr.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ApacheSolr.Test.Model
{
    /// <summary>
    ///  Class for testing ErrorInfoModel
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ErrorInfoModelTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ErrorInfoModel
        //private ErrorInfoModel instance;

        public ErrorInfoModelTests()
        {
            // TODO uncomment below to create an instance of ErrorInfoModel
            //instance = new ErrorInfoModel();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ErrorInfoModel
        /// </summary>
        [Fact]
        public void ErrorInfoModelInstanceTest()
        {
            // TODO uncomment below to test "IsType" ErrorInfoModel
            //Assert.IsType<ErrorInfoModel>(instance);
        }

        /// <summary>
        /// Test the property 'Metadata'
        /// </summary>
        [Fact]
        public void MetadataTest()
        {
            // TODO unit test for the property 'Metadata'
        }

        /// <summary>
        /// Test the property 'Details'
        /// </summary>
        [Fact]
        public void DetailsTest()
        {
            // TODO unit test for the property 'Details'
        }

        /// <summary>
        /// Test the property 'Msg'
        /// </summary>
        [Fact]
        public void MsgTest()
        {
            // TODO unit test for the property 'Msg'
        }

        /// <summary>
        /// Test the property 'Trace'
        /// </summary>
        [Fact]
        public void TraceTest()
        {
            // TODO unit test for the property 'Trace'
        }

        /// <summary>
        /// Test the property 'Code'
        /// </summary>
        [Fact]
        public void CodeTest()
        {
            // TODO unit test for the property 'Code'
        }
    }
}
