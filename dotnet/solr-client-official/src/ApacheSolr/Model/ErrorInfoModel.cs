/*
 * v2 API
 *
 * OpenAPI spec for Solr's v2 API endpoints
 *
 * The version of the OpenAPI document: 9.8.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = ApacheSolr.Client.FileParameter;
using OpenAPIDateConverter = ApacheSolr.Client.OpenAPIDateConverter;

namespace ApacheSolr.Model
{
    /// <summary>
    /// ErrorInfoModel
    /// </summary>
    [DataContract(Name = "ErrorInfo")]
    public partial class ErrorInfoModel : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ErrorInfoModel" /> class.
        /// </summary>
        /// <param name="metadata">metadata.</param>
        /// <param name="details">details.</param>
        /// <param name="msg">msg.</param>
        /// <param name="trace">trace.</param>
        /// <param name="code">code.</param>
        public ErrorInfoModel(ErrorMetadataModel metadata = default(ErrorMetadataModel), Collection<Dictionary<string, Object>> details = default(Collection<Dictionary<string, Object>>), string msg = default(string), string trace = default(string), int code = default(int))
        {
            this.Metadata = metadata;
            this.Details = details;
            this.Msg = msg;
            this.Trace = trace;
            this.Code = code;
        }

        /// <summary>
        /// Gets or Sets Metadata
        /// </summary>
        [DataMember(Name = "metadata", EmitDefaultValue = false)]
        public ErrorMetadataModel Metadata { get; set; }

        /// <summary>
        /// Gets or Sets Details
        /// </summary>
        [DataMember(Name = "details", EmitDefaultValue = false)]
        public Collection<Dictionary<string, Object>> Details { get; set; }

        /// <summary>
        /// Gets or Sets Msg
        /// </summary>
        [DataMember(Name = "msg", EmitDefaultValue = false)]
        public string Msg { get; set; }

        /// <summary>
        /// Gets or Sets Trace
        /// </summary>
        [DataMember(Name = "trace", EmitDefaultValue = false)]
        public string Trace { get; set; }

        /// <summary>
        /// Gets or Sets Code
        /// </summary>
        [DataMember(Name = "code", EmitDefaultValue = false)]
        public int Code { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ErrorInfoModel {\n");
            sb.Append("  Metadata: ").Append(Metadata).Append("\n");
            sb.Append("  Details: ").Append(Details).Append("\n");
            sb.Append("  Msg: ").Append(Msg).Append("\n");
            sb.Append("  Trace: ").Append(Trace).Append("\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
