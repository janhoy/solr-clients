/*
 * v2 API
 *
 * OpenAPI spec for Solr's v2 API endpoints
 *
 * The version of the OpenAPI document: 9.8.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using SolrClient.Client;
using SolrClient.Api;
// uncomment below to import models
//using SolrClient.Model;

namespace SolrClient.Test.Api
{
    /// <summary>
    ///  Class for testing FileStoreApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class FileStoreApiTests : IDisposable
    {
        private FileStoreApi instance;

        public FileStoreApiTests()
        {
            instance = new FileStoreApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of FileStoreApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' FileStoreApi
            //Assert.IsType<FileStoreApi>(instance);
        }

        /// <summary>
        /// Test DeleteFile
        /// </summary>
        [Fact]
        public void DeleteFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //bool? localDelete = null;
            //var response = instance.DeleteFile(path, localDelete);
            //Assert.IsType<SolrJerseyResponseModel>(response);
        }

        /// <summary>
        /// Test GetFile
        /// </summary>
        [Fact]
        public void GetFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //bool? sync = null;
            //string? getFrom = null;
            //bool? meta = null;
            //var response = instance.GetFile(path, sync, getFrom, meta);
            //Assert.IsType<SolrJerseyResponseModel>(response);
        }

        /// <summary>
        /// Test UploadFile
        /// </summary>
        [Fact]
        public void UploadFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filePath = null;
            //Object body = null;
            //Collection<string>? sig = null;
            //var response = instance.UploadFile(filePath, body, sig);
            //Assert.IsType<UploadToFileStoreResponseModel>(response);
        }
    }
}
