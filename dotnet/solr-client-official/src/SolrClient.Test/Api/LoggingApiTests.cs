/*
 * v2 API
 *
 * OpenAPI spec for Solr's v2 API endpoints
 *
 * The version of the OpenAPI document: 9.8.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using SolrClient.Client;
using SolrClient.Api;
// uncomment below to import models
//using SolrClient.Model;

namespace SolrClient.Test.Api
{
    /// <summary>
    ///  Class for testing LoggingApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class LoggingApiTests : IDisposable
    {
        private LoggingApi instance;

        public LoggingApiTests()
        {
            instance = new LoggingApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of LoggingApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' LoggingApi
            //Assert.IsType<LoggingApi>(instance);
        }

        /// <summary>
        /// Test FetchLocalLogMessages
        /// </summary>
        [Fact]
        public void FetchLocalLogMessagesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? since = null;
            //var response = instance.FetchLocalLogMessages(since);
            //Assert.IsType<LogMessagesResponseModel>(response);
        }

        /// <summary>
        /// Test ListAllLoggersAndLevels
        /// </summary>
        [Fact]
        public void ListAllLoggersAndLevelsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ListAllLoggersAndLevels();
            //Assert.IsType<ListLevelsResponseModel>(response);
        }

        /// <summary>
        /// Test ModifyLocalLogLevel
        /// </summary>
        [Fact]
        public void ModifyLocalLogLevelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Collection<LogLevelChangeModel>? logLevelChangeModel = null;
            //var response = instance.ModifyLocalLogLevel(logLevelChangeModel);
            //Assert.IsType<LoggingResponseModel>(response);
        }

        /// <summary>
        /// Test SetMessageThreshold
        /// </summary>
        [Fact]
        public void SetMessageThresholdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SetThresholdRequestBodyModel? setThresholdRequestBodyModel = null;
            //var response = instance.SetMessageThreshold(setThresholdRequestBodyModel);
            //Assert.IsType<LoggingResponseModel>(response);
        }
    }
}
