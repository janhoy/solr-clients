/*
 * v2 API
 *
 * OpenAPI spec for Solr's v2 API endpoints
 *
 * The version of the OpenAPI document: 9.8.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = SolrClient.Client.FileParameter;
using OpenAPIDateConverter = SolrClient.Client.OpenAPIDateConverter;

namespace SolrClient.Model
{
    /// <summary>
    /// FileListResponseModel
    /// </summary>
    [DataContract(Name = "FileListResponse")]
    public partial class FileListResponseModel : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FileListResponseModel" /> class.
        /// </summary>
        /// <param name="responseHeader">responseHeader.</param>
        /// <param name="error">error.</param>
        /// <param name="filelist">filelist.</param>
        /// <param name="confFiles">confFiles.</param>
        /// <param name="status">status.</param>
        /// <param name="message">message.</param>
        /// <param name="exception">exception.</param>
        public FileListResponseModel(ResponseHeaderModel responseHeader = default(ResponseHeaderModel), ErrorInfoModel error = default(ErrorInfoModel), Collection<FileMetaDataModel> filelist = default(Collection<FileMetaDataModel>), Collection<FileMetaDataModel> confFiles = default(Collection<FileMetaDataModel>), string status = default(string), string message = default(string), FileListResponseExceptionModel exception = default(FileListResponseExceptionModel))
        {
            this.ResponseHeader = responseHeader;
            this.Error = error;
            this.Filelist = filelist;
            this.ConfFiles = confFiles;
            this.Status = status;
            this.Message = message;
            this.Exception = exception;
        }

        /// <summary>
        /// Gets or Sets ResponseHeader
        /// </summary>
        [DataMember(Name = "responseHeader", EmitDefaultValue = false)]
        public ResponseHeaderModel ResponseHeader { get; set; }

        /// <summary>
        /// Gets or Sets Error
        /// </summary>
        [DataMember(Name = "error", EmitDefaultValue = false)]
        public ErrorInfoModel Error { get; set; }

        /// <summary>
        /// Gets or Sets Filelist
        /// </summary>
        [DataMember(Name = "filelist", EmitDefaultValue = false)]
        public Collection<FileMetaDataModel> Filelist { get; set; }

        /// <summary>
        /// Gets or Sets ConfFiles
        /// </summary>
        [DataMember(Name = "confFiles", EmitDefaultValue = false)]
        public Collection<FileMetaDataModel> ConfFiles { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name = "message", EmitDefaultValue = false)]
        public string Message { get; set; }

        /// <summary>
        /// Gets or Sets Exception
        /// </summary>
        [DataMember(Name = "exception", EmitDefaultValue = false)]
        public FileListResponseExceptionModel Exception { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class FileListResponseModel {\n");
            sb.Append("  ResponseHeader: ").Append(ResponseHeader).Append("\n");
            sb.Append("  Error: ").Append(Error).Append("\n");
            sb.Append("  Filelist: ").Append(Filelist).Append("\n");
            sb.Append("  ConfFiles: ").Append(ConfFiles).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("  Exception: ").Append(Exception).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
