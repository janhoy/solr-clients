/*
 * v2 API
 *
 * OpenAPI spec for Solr's v2 API endpoints
 *
 * The version of the OpenAPI document: 9.8.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = SolrClient.Client.FileParameter;
using OpenAPIDateConverter = SolrClient.Client.OpenAPIDateConverter;

namespace SolrClient.Model
{
    /// <summary>
    /// LogMessageInfoModel
    /// </summary>
    [DataContract(Name = "LogMessageInfo")]
    public partial class LogMessageInfoModel : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LogMessageInfoModel" /> class.
        /// </summary>
        /// <param name="found">found.</param>
        /// <param name="levels">levels.</param>
        /// <param name="buffer">buffer.</param>
        /// <param name="threshold">threshold.</param>
        /// <param name="since">since.</param>
        /// <param name="last">last.</param>
        public LogMessageInfoModel(bool found = default(bool), Collection<string> levels = default(Collection<string>), int buffer = default(int), string threshold = default(string), long since = default(long), long last = default(long))
        {
            this.Found = found;
            this.Levels = levels;
            this.Buffer = buffer;
            this.Threshold = threshold;
            this.Since = since;
            this.Last = last;
        }

        /// <summary>
        /// Gets or Sets Found
        /// </summary>
        [DataMember(Name = "found", EmitDefaultValue = true)]
        public bool Found { get; set; }

        /// <summary>
        /// Gets or Sets Levels
        /// </summary>
        [DataMember(Name = "levels", EmitDefaultValue = false)]
        public Collection<string> Levels { get; set; }

        /// <summary>
        /// Gets or Sets Buffer
        /// </summary>
        [DataMember(Name = "buffer", EmitDefaultValue = false)]
        public int Buffer { get; set; }

        /// <summary>
        /// Gets or Sets Threshold
        /// </summary>
        [DataMember(Name = "threshold", EmitDefaultValue = false)]
        public string Threshold { get; set; }

        /// <summary>
        /// Gets or Sets Since
        /// </summary>
        [DataMember(Name = "since", EmitDefaultValue = false)]
        public long Since { get; set; }

        /// <summary>
        /// Gets or Sets Last
        /// </summary>
        [DataMember(Name = "last", EmitDefaultValue = false)]
        public long Last { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class LogMessageInfoModel {\n");
            sb.Append("  Found: ").Append(Found).Append("\n");
            sb.Append("  Levels: ").Append(Levels).Append("\n");
            sb.Append("  Buffer: ").Append(Buffer).Append("\n");
            sb.Append("  Threshold: ").Append(Threshold).Append("\n");
            sb.Append("  Since: ").Append(Since).Append("\n");
            sb.Append("  Last: ").Append(Last).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
