/*
 * v2 API
 *
 * OpenAPI spec for Solr's v2 API endpoints
 *
 * The version of the OpenAPI document: 9.8.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = SolrClient.Client.FileParameter;
using OpenAPIDateConverter = SolrClient.Client.OpenAPIDateConverter;

namespace SolrClient.Model
{
    /// <summary>
    /// RestoreCollectionRequestBodyModel
    /// </summary>
    [DataContract(Name = "RestoreCollectionRequestBody")]
    public partial class RestoreCollectionRequestBodyModel : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RestoreCollectionRequestBodyModel" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected RestoreCollectionRequestBodyModel() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="RestoreCollectionRequestBodyModel" /> class.
        /// </summary>
        /// <param name="collection">collection (required).</param>
        /// <param name="location">location.</param>
        /// <param name="repository">repository.</param>
        /// <param name="backupId">backupId.</param>
        /// <param name="async">async.</param>
        /// <param name="createCollectionParams">createCollectionParams.</param>
        public RestoreCollectionRequestBodyModel(string collection = default(string), string location = default(string), string repository = default(string), int backupId = default(int), string async = default(string), CreateCollectionRequestBodyModel createCollectionParams = default(CreateCollectionRequestBodyModel))
        {
            // to ensure "collection" is required (not null)
            if (collection == null)
            {
                throw new ArgumentNullException("collection is a required property for RestoreCollectionRequestBodyModel and cannot be null");
            }
            this.Collection = collection;
            this.Location = location;
            this.Repository = repository;
            this.BackupId = backupId;
            this.Async = async;
            this.CreateCollectionParams = createCollectionParams;
        }

        /// <summary>
        /// Gets or Sets Collection
        /// </summary>
        [DataMember(Name = "collection", IsRequired = true, EmitDefaultValue = true)]
        public string Collection { get; set; }

        /// <summary>
        /// Gets or Sets Location
        /// </summary>
        [DataMember(Name = "location", EmitDefaultValue = false)]
        public string Location { get; set; }

        /// <summary>
        /// Gets or Sets Repository
        /// </summary>
        [DataMember(Name = "repository", EmitDefaultValue = false)]
        public string Repository { get; set; }

        /// <summary>
        /// Gets or Sets BackupId
        /// </summary>
        [DataMember(Name = "backupId", EmitDefaultValue = false)]
        public int BackupId { get; set; }

        /// <summary>
        /// Gets or Sets Async
        /// </summary>
        [DataMember(Name = "async", EmitDefaultValue = false)]
        public string Async { get; set; }

        /// <summary>
        /// Gets or Sets CreateCollectionParams
        /// </summary>
        [DataMember(Name = "createCollectionParams", EmitDefaultValue = false)]
        public CreateCollectionRequestBodyModel CreateCollectionParams { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RestoreCollectionRequestBodyModel {\n");
            sb.Append("  Collection: ").Append(Collection).Append("\n");
            sb.Append("  Location: ").Append(Location).Append("\n");
            sb.Append("  Repository: ").Append(Repository).Append("\n");
            sb.Append("  BackupId: ").Append(BackupId).Append("\n");
            sb.Append("  Async: ").Append(Async).Append("\n");
            sb.Append("  CreateCollectionParams: ").Append(CreateCollectionParams).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
