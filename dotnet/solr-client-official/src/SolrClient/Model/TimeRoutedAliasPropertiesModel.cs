/*
 * v2 API
 *
 * OpenAPI spec for Solr's v2 API endpoints
 *
 * The version of the OpenAPI document: 9.8.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using JsonSubTypes;
using System.ComponentModel.DataAnnotations;
using FileParameter = SolrClient.Client.FileParameter;
using OpenAPIDateConverter = SolrClient.Client.OpenAPIDateConverter;

namespace SolrClient.Model
{
    /// <summary>
    /// TimeRoutedAliasPropertiesModel
    /// </summary>
    [DataContract(Name = "TimeRoutedAliasProperties")]
    public partial class TimeRoutedAliasPropertiesModel : RoutedAliasPropertiesModel, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TimeRoutedAliasPropertiesModel" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected TimeRoutedAliasPropertiesModel() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="TimeRoutedAliasPropertiesModel" /> class.
        /// </summary>
        /// <param name="start">start (required).</param>
        /// <param name="interval">interval (required).</param>
        /// <param name="tz">tz.</param>
        /// <param name="maxFutureMs">maxFutureMs.</param>
        /// <param name="preemptiveCreateMath">preemptiveCreateMath.</param>
        /// <param name="autoDeleteAge">autoDeleteAge.</param>
        /// <param name="field">field (required).</param>
        /// <param name="type">type (required).</param>
        public TimeRoutedAliasPropertiesModel(string start = default(string), string interval = default(string), string tz = default(string), long maxFutureMs = default(long), string preemptiveCreateMath = default(string), string autoDeleteAge = default(string), string field = default(string), string type = default(string)) : base()
        {
            // to ensure "start" is required (not null)
            if (start == null)
            {
                throw new ArgumentNullException("start is a required property for TimeRoutedAliasPropertiesModel and cannot be null");
            }
            this.Start = start;
            // to ensure "interval" is required (not null)
            if (interval == null)
            {
                throw new ArgumentNullException("interval is a required property for TimeRoutedAliasPropertiesModel and cannot be null");
            }
            this.Interval = interval;
            this.Tz = tz;
            this.MaxFutureMs = maxFutureMs;
            this.PreemptiveCreateMath = preemptiveCreateMath;
            this.AutoDeleteAge = autoDeleteAge;
        }

        /// <summary>
        /// Gets or Sets Start
        /// </summary>
        [DataMember(Name = "start", IsRequired = true, EmitDefaultValue = true)]
        public string Start { get; set; }

        /// <summary>
        /// Gets or Sets Interval
        /// </summary>
        [DataMember(Name = "interval", IsRequired = true, EmitDefaultValue = true)]
        public string Interval { get; set; }

        /// <summary>
        /// Gets or Sets Tz
        /// </summary>
        [DataMember(Name = "tz", EmitDefaultValue = false)]
        public string Tz { get; set; }

        /// <summary>
        /// Gets or Sets MaxFutureMs
        /// </summary>
        [DataMember(Name = "maxFutureMs", EmitDefaultValue = false)]
        public long MaxFutureMs { get; set; }

        /// <summary>
        /// Gets or Sets PreemptiveCreateMath
        /// </summary>
        [DataMember(Name = "preemptiveCreateMath", EmitDefaultValue = false)]
        public string PreemptiveCreateMath { get; set; }

        /// <summary>
        /// Gets or Sets AutoDeleteAge
        /// </summary>
        [DataMember(Name = "autoDeleteAge", EmitDefaultValue = false)]
        public string AutoDeleteAge { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TimeRoutedAliasPropertiesModel {\n");
            sb.Append("  ").Append(base.ToString().Replace("\n", "\n  ")).Append("\n");
            sb.Append("  Start: ").Append(Start).Append("\n");
            sb.Append("  Interval: ").Append(Interval).Append("\n");
            sb.Append("  Tz: ").Append(Tz).Append("\n");
            sb.Append("  MaxFutureMs: ").Append(MaxFutureMs).Append("\n");
            sb.Append("  PreemptiveCreateMath: ").Append(PreemptiveCreateMath).Append("\n");
            sb.Append("  AutoDeleteAge: ").Append(AutoDeleteAge).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public override string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            return this.BaseValidate(validationContext);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        protected IEnumerable<ValidationResult> BaseValidate(ValidationContext validationContext)
        {
            foreach (var x in base.BaseValidate(validationContext))
            {
                yield return x;
            }
            yield break;
        }
    }

}
